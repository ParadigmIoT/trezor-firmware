#ifndef STM32U5A9J_DK_H_
#define STM32U5A9J_DK_H_

#define VDD_1V8 1

#define DISPLAY_COLOR_MODE DMA2D_OUTPUT_ARGB8888

#define BTN_POWER_PIN GPIO_PIN_13
#define BTN_POWER_PORT GPIOC
#define BTN_POWER_CLK_ENA __HAL_RCC_GPIOC_CLK_ENABLE

#define I2C_COUNT 2
#define I2C_INSTANCE_0 I2C5
#define I2C_INSTANCE_0_CLK_EN __HAL_RCC_I2C5_CLK_ENABLE
#define I2C_INSTANCE_0_CLK_DIS __HAL_RCC_I2C5_CLK_DISABLE
#define I2C_INSTANCE_0_PIN_AF GPIO_AF2_I2C5
#define I2C_INSTANCE_0_SDA_PORT GPIOH
#define I2C_INSTANCE_0_SDA_PIN GPIO_PIN_4
#define I2C_INSTANCE_0_SDA_CLK_EN __HAL_RCC_GPIOH_CLK_ENABLE
#define I2C_INSTANCE_0_SCL_PORT GPIOH
#define I2C_INSTANCE_0_SCL_PIN GPIO_PIN_5
#define I2C_INSTANCE_0_SCL_CLK_EN __HAL_RCC_GPIOH_CLK_ENABLE
#define I2C_INSTANCE_0_RESET_REG &RCC->APB1RSTR2
#define I2C_INSTANCE_0_RESET_BIT RCC_APB1RSTR2_I2C5RST
#define I2C_INSTANCE_0_EV_IRQHandler I2C5_EV_IRQHandler
#define I2C_INSTANCE_0_ER_IRQHandler I2C5_ER_IRQHandler
#define I2C_INSTANCE_0_EV_IRQn I2C5_EV_IRQn
#define I2C_INSTANCE_0_ER_IRQn I2C5_ER_IRQn
#define I2C_INSTANCE_0_GUARD_TIME 0

#define I2C_INSTANCE_1 I2C2
#define I2C_INSTANCE_1_CLK_EN __HAL_RCC_I2C2_CLK_ENABLE
#define I2C_INSTANCE_1_CLK_DIS __HAL_RCC_I2C2_CLK_DISABLE
#define I2C_INSTANCE_1_PIN_AF GPIO_AF4_I2C2
#define I2C_INSTANCE_1_SDA_PORT GPIOF
#define I2C_INSTANCE_1_SDA_PIN GPIO_PIN_1
#define I2C_INSTANCE_1_SDA_CLK_EN __HAL_RCC_GPIOF_CLK_ENABLE
#define I2C_INSTANCE_1_SCL_PORT GPIOF
#define I2C_INSTANCE_1_SCL_PIN GPIO_PIN_0
#define I2C_INSTANCE_1_SCL_CLK_EN __HAL_RCC_GPIOF_CLK_ENABLE
#define I2C_INSTANCE_1_RESET_REG &RCC->APB1RSTR1
#define I2C_INSTANCE_1_RESET_BIT RCC_APB1RSTR1_I2C2RST
#define I2C_INSTANCE_1_EV_IRQHandler I2C2_EV_IRQHandler
#define I2C_INSTANCE_1_ER_IRQHandler I2C2_ER_IRQHandler
#define I2C_INSTANCE_1_EV_IRQn I2C2_EV_IRQn
#define I2C_INSTANCE_1_ER_IRQn I2C2_ER_IRQn
#define I2C_INSTANCE_1_GUARD_TIME 50  // Optiga requires 50us guard time

#define TOUCH_I2C_INSTANCE 0
#define OPTIGA_I2C_INSTANCE 1

#define NRF_IN_GPIO0_PIN GPIO_PIN_12
#define NRF_IN_GPIO0_PORT GPIOD
#define NRF_IN_GPIO0_CLK_ENA __HAL_RCC_GPIOD_CLK_ENABLE
#define NRF_IN_FW_RUNNING_PIN GPIO_PIN_4
#define NRF_IN_FW_RUNNING_PORT GPIOE
#define NRF_IN_FW_RUNNING_CLK_ENA __HAL_RCC_GPIOE_CLK_ENABLE
#define NRF_OUT_RESET_PIN GPIO_PIN_5
#define NRF_OUT_RESET_PORT GPIOE
#define NRF_OUT_RESET_CLK_ENA __HAL_RCC_GPIOE_CLK_ENABLE
#define NRF_OUT_STAY_IN_BLD_PIN GPIO_PIN_6
#define NRF_OUT_STAY_IN_BLD_PORT GPIOE
#define NRF_OUT_STAY_IN_BLD_CLK_ENA __HAL_RCC_GPIOE_CLK_ENABLE
#define NRF_OUT_FW_RUNNING_PIN GPIO_PIN_2
#define NRF_OUT_FW_RUNNING_PORT GPIOE
#define NRF_OUT_FW_RUNNING_CLK_ENA __HAL_RCC_GPIOE_CLK_ENABLE

#define OPTIGA_RST_PORT GPIOB
#define OPTIGA_RST_PIN GPIO_PIN_4
#define OPTIGA_RST_CLK_EN __HAL_RCC_GPIOB_CLK_ENABLE

// If optiga power is controlled by a GPIO pin is needed, define the following:
// #define OPTIGA_PWR_PORT GPIOB
// #define OPTIGA_PWR_PIN GPIO_PIN_3
// #define OPTIGA_PWR_CLK_EN __HAL_RCC_GPIOB_CLK_ENABLE

#endif  // STM32U5A9J_DK_H_
